:like:  true
:date:  2020/01/22
:week:  Wed
:time:  02:32
:sign:  hsinchu
:title: [作品] 前行
:re:    true

(文長，新作品的連結在最底下)

今年初投完票以後，覺得距離上次寫 side project 已經隔了很久
是時候寫點什麼了

很快就想起 `前行 <#forward.txt>`_ 這個作品

以前我都是用 DOM 實作這些作品，它們都有點效能問題
根據運算量，有些作品在手機上跑起來效果不是很好，例如前行以及 `Universe <#universe1.4.txt>`_

所以這次決定用 canvas 重寫

---

除了重覆的程式碼有點多之外，canvas API 用起來還滿簡單的
麻煩的是背後的數學，雖然已經有採用一些前作的程式碼
但還是有很多公式要重新設計和調整

和 DOM 比起來，效能非常、非常好，於是在完成雛形之後，我開始考慮支援手機

---

從筆電/桌機進入手機，最先面對到的問題就是螢幕大小和比例
這部份和前作一樣，我取螢幕長寬比較小的那個，當成一個參考值
接下來所有的尺寸都從這個值算出來，這樣各個裝置的的效果就會差不多了

第二個問題是觸控，一般來說手機是不會有鍵盤的
觸控鍵盤長出來的話，畫面就幾乎沒了，所以完全不考慮

所以原本習慣用鍵盤實作的功能，我得改用手勢實作

---

大致了解了 touchstart / touchmove / touchcancel / touchend 以後
我建立了一個 (相對) 簡易的手勢辨認模型：

把手機螢幕分成一個 田 字形，對於每隻手指，都只記錄它所在的區域
手指移動後，如果脫離了原本的區域，就把新的區域按順序紀錄下來
等到手指離開螢幕，就把這些經過的區域收集起來備用
等到 所有 手指都離開螢幕，再來根據收集過的所有順序判定手勢

舉例來說，兩隻手指同時在螢幕的左右邊緣，由上往下滑
我會分別紀錄到「左上;左下」「右上;右下」(左右手的順序不一定
只分成四個區域的話，就算用暴力法也能列得出所有手勢
先把結果排序再判斷的話，種類又可以縮減許多

實作完成以後，我很快發現這種方法一定要等到手指離開螢幕才會產生反應
這樣互動性太低了，有點單調，我想做出能即時互動的手勢
但，有什麼好玩的手勢呢？

---

即時互動，表示過程是連續的，浮點數的參數很適合這種玩法
我很快的決定讓畫面的顏色隨著手勢改變

最後的設計是在螢幕左下角放一個 Hue 環，並嘗試達成一些目標：

[Cb;*[; 要很炫 - 這東西已經沒有實用性了，效果不炫的話它還能幹嘛？
[Cb;*[; 不干擾畫面
[Cb;*[; 使用方式直覺

每個目標都融入許多細節 (就不自稱是巧思了)，這裡列出幾個：

[Cb;*[; 平常它會縮起來，要壓著一下下才會展開 (避免誤觸)，不要佔空間
[Cb;*[; 展開的方式是「展開」，不是直接 pop out
[Cb;*[; 展開除了不能太大以外，再做成半透明
[Cb;*[; 展開到一半如果手指放掉，會縮回去; 縮回去的過程再壓住，會馬上再展開
[Cb;*[; 刻意把環的大小調成有一部份超出螢幕，讓人比較容易覺得「它可以轉」
  而不是手指戳著然後左看右看的找顏色

---

關於最後一點，我失敗了
讓朋友們測試以後，沒有任何人猜出這個 Hue 環需要兩隻手指才能操作
所有人都在壓住、等到 Hue 環出現後，嘗試用同一隻手指去摸它
然後它就縮起來了

---

所以 我直接把使用教學也做在畫面上了 (放心，沒有字)
加上這些教學以後，原始碼突破了千行

這個使用教學還沒有給任何人看過，所以其實也不知道是否有效果

但我在拖完地以後腰非常的痛，已經痛了三個小時了，所以不管了，FUCK IT
就算沒人看得懂也沒關係了，它已經超越我以前的所有作品了，它已經是我的最愛了

---

謝謝你看到這裡

`Forward/rewrite <https://pi314.github.io/forward/rewrite/>`_

<img src="/Res/forward_qrcode.png">

---

P.S. 原本 Hue 環的半徑是直接設成 25px
測試時發現很多人的手機解析度可能比我的大 4 倍這個就不提了
吃飯時整桌一問發現只有我不是拿 iPhone 這個也不提了

---

...腰好痛
